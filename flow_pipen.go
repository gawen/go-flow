// Code generated by go generate; DO NOT EDIT.
// This file was generated by flow_pipen_gen.go at 2021-06-18 18:30:33.163714 +0000 UTC
package flow

func (f *Flow) Consume(lane int, args ...interface{}) {
	_ = f.PipeN(lane, 0, 0, args...)
}

func (f *Flow) Pipe(lane, chBuf int, args ...interface{}) *Stream {
	outs := f.PipeN(lane, chBuf, 1, args...)
	return outs[0]
}

func (f *Flow) Pipe2(lane, chBuf int, args ...interface{}) (*Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 2, args...)
	return outs[0], outs[1]
}

func (f *Flow) Pipe3(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 3, args...)
	return outs[0], outs[1], outs[2]
}

func (f *Flow) Pipe4(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 4, args...)
	return outs[0], outs[1], outs[2], outs[3]
}

func (f *Flow) Pipe5(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 5, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4]
}

func (f *Flow) Pipe6(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 6, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5]
}

func (f *Flow) Pipe7(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 7, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6]
}

func (f *Flow) Pipe8(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 8, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7]
}

func (f *Flow) Pipe9(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 9, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8]
}

func (f *Flow) Pipe10(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 10, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9]
}

func (f *Flow) Pipe11(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 11, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10]
}

func (f *Flow) Pipe12(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 12, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11]
}

func (f *Flow) Pipe13(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 13, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12]
}

func (f *Flow) Pipe14(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 14, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12], outs[13]
}

func (f *Flow) Pipe15(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 15, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12], outs[13], outs[14]
}

func (f *Flow) Pipe16(lane, chBuf int, args ...interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.PipeN(lane, chBuf, 16, args...)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12], outs[13], outs[14], outs[15]
}

