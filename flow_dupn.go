// Code generated by go generate; DO NOT EDIT.
// This file was generated by flow_dupn_gen.go at 2021-06-18 18:30:32.824419 +0000 UTC
package flow

func (f *Flow) Dup2(chBuf int, in interface{}) (*Stream, *Stream) {
	outs := f.DupN(chBuf, 2, in)
	return outs[0], outs[1]
}

func (f *Flow) Dup3(chBuf int, in interface{}) (*Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 3, in)
	return outs[0], outs[1], outs[2]
}

func (f *Flow) Dup4(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 4, in)
	return outs[0], outs[1], outs[2], outs[3]
}

func (f *Flow) Dup5(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 5, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4]
}

func (f *Flow) Dup6(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 6, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5]
}

func (f *Flow) Dup7(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 7, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6]
}

func (f *Flow) Dup8(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 8, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7]
}

func (f *Flow) Dup9(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 9, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8]
}

func (f *Flow) Dup10(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 10, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9]
}

func (f *Flow) Dup11(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 11, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10]
}

func (f *Flow) Dup12(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 12, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11]
}

func (f *Flow) Dup13(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 13, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12]
}

func (f *Flow) Dup14(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 14, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12], outs[13]
}

func (f *Flow) Dup15(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 15, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12], outs[13], outs[14]
}

func (f *Flow) Dup16(chBuf int, in interface{}) (*Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream, *Stream) {
	outs := f.DupN(chBuf, 16, in)
	return outs[0], outs[1], outs[2], outs[3], outs[4], outs[5], outs[6], outs[7], outs[8], outs[9], outs[10], outs[11], outs[12], outs[13], outs[14], outs[15]
}

